Rajesh Kumar
====================
Docker
Jenkins
==================================
Start: 6:30 AM IST
End: 2 PM IST
--------------------
Lunch: 9:30 AM IST - 10:30 AM IST
-------------------------------
Demo & Lab = AWS / Linux
==============================
PHYSICAL SERVER		=> Virtual Server ==> Container
=====================================================
					   Vmware			==> Docker



Containers		Containers			Containers
----------------------------------------
Docker			Docker				Docker
---------		------------
1 Host			100 Host			100 Host
				-----------------
				Kubernetes			30 Kubernetes
									================
									OpenShift
		
===================================================
what is Docker?
Why Docker?
How docker works?
What is Container?
How container works?
====================================
Step 1 - Install a docker
https://www.devopsschool.com/blog/docker-installation-and-configurations/

Human --> Client  --> DockerD --> ContainerD -> Kernel
          -------------------
				engine
 
Step 2 - Showing you all components
- Engine					DONE
- Docker Registry			https://hub.docker.com/
		nginx
		apche
		jenkins
- Docker Images
		OS IMAGE     === Boot file system + root fs + user fs + app fs
		Docker Image ===  root fs + user fs + app fs

Ubuntu in VMS --- Boot file system + root fs + user fs + app fs
Ubuntu in Container - root fs + user fs +	app fs

- ONE COPY OF Image - get mounted to each container
- 10 container == 10 copy of image

- Docker Container
	is 1 userspace
				with
				1 Mount from Image
				1 net
				1 PIDTREE 

Step 3 - Container workflow
---------------------------------------
VM - create -> start -> stop -> start -> restart -> pause -> unpause -> kill -> remove
Container - create -> start -> stop -> start -> restart -> pause -> unpause -> kill -> remove


  15  docker images
   16  docker pull nginx
   17  docker images
   18  clear
   19  docker images
   20  docker create nginx
   21  docker ps
   22  docker ps -a
   23  docker create nginx
   24  docker ps -a
   25  docker create nginx
   26  clear
   27  docker ps -a
   28  docker start ea46cd27d6ef
   29  docker ps -a
   30  docker start 7d0ccfd237a6
   31  docker ps -a
   32  docker stop ea46cd27d6ef
   33  docker ps -a
   34  docker start ea46cd27d6ef
   35  docker ps -a
   36  docker restart 7d0ccfd237a6
   37  docker ps -a
   38  docker pause ea46cd27d6ef
   39  docker ps -a
   40  docker unpause ea46cd27d6ef
   41  docker ps -a
   42  docker kil ea46cd27d6ef
   43  docker kill ea46cd27d6ef
   44  docker kil ea46cd27d6ef
   45  docker ps -a
   46  docker rm ea46cd27d6ef
   47  docker ps -a
   48  docker start f2fa9f875023
   49  clear
   50  docker ps -a
   51  docker inspect 7d0ccfd237a6 | grep -i ip
   52  docker inspect f2fa9f875023 | grep -i ip
   53  curl http://172.17.0.3
   54  curl http://172.17.0.2
   55  docker ps
   56  docker ps -a

=====================================
docker create --name=raj1 nginx

3.110.175.100
centos
Password - raju123

======================================
Physical				virtual				container
is running				is running			is running
coz of 					coz of 				coz of 
PID1					PID1				PID1	
==================================================
How to use container?
How to use vm?


get inside a container
- do something
---------------------------------
exec
- it would execute an executable inside a container
$ docker exec wana1 ls
$ docker exec wana1 df -kh
- you can execute /bin/bash & with -it
$ docker exec -it wana1 /bin/bash

attach
- it would get attached to PID 1 processs of the container
		PID 1 can be bash, nginx, perl, python, java

$ docker attach contid



access from outside 
- using http
=========================================
pull -> create -> start -> attach
==================================
			run

pull -> create -> start -> do not attach
==================================
			run -d

$ docker run httpd
$ docker run -d httpd
$ docker run -p 81:80 -d httpd

81:80
81 - NODE port
80 - container port

docker run -p 82:80 -d nginx

docker run -d -p 8081:8080  jenkins/jenkins	Chong
docker run -d -p 8082:8080  jenkins/jenkins	Intan
docker run -d -p 8083:8080  jenkins/jenkins	Nur
docker run -d -p 8084:8080  jenkins/jenkins	Sachin
docker run -d -p 8085:8080  jenkins/jenkins	Yosia
docker run -d -p 8086:8080  jenkins/jenkins	Zharif

docker exec cont-id more /path
https://www.devopsschool.com/blog/complete-guide-of-java-installation-in-linux/
https://www.devopsschool.com/blog/complete-tutorial-of-jenkins-installation-and-configuration/
==================================

http://3.110.175.100:8080/
rajesh
rajesh123
==============================================
What is CD
--------------------------------------
CI
Cont Delivery		ITS POINT - If your CI passed - u reached CD
Cont Deployment		into Prod





What is Jenkins?
	- CI tool
	Release
		- Community --- FREE - OS 
		- Enterprise
		- Blueocean
		- jenkinsx
	Written in Java
	Based on plugins	https://plugins.jenkins.io/
	

What is CI 
==================================
Auto Build + Auto test
----------------------
	 Imm Feedback

PLAN -> Code -> Code Ana -> Build -> UT -> Package -> Archive -> Dep2Qa -> AT -> CC


PLAN -> Code -> Code Ana -> Build -> UT -> Package -> Archive -> Dep2Qa -> AT -> CC
====================================================================================
Jira -> git  -> Sonarqube -> Maven -> Junit -> war -> nexus  -> Ansible -> Sel -> Jacoco

Arc							Dev											QA
-------  --------------------------------------------  ------------------------------
PLAN -> Code -> Code Ana -> Build -> UT -> Package -> Archive -> Dep2Qa -> AT -> CC
====================================================================================
Jira -> git  -> Sonarqube -> Maven -> Junit -> war -> nexus  -> Ansible -> Sel -> Jacoco
-------------------------------------------------------------------------------------
									 Imm Feedback

How can we integ Team?
How can we integ SDLC Phases?
How can we integ Tools??

Arc							Dev											QA
-------  --------------------------------------------  ------------------------------
PLAN -> Code -> Code Ana -> Build -> UT -> Package -> Archive -> Dep2Qa -> AT -> CC
====================================================================================
Jira -> git  -> Sonarqube -> Maven -> Junit -> war -> nexus  -> Ansible -> Sel -> Jacoco
-------------------------------------------------------------------------------------
									 Imm Feedback
									 Integ tools
									 Scheduling

====================================================================
Basic workflow
--------------------------------------------------------------------
What is your tech?	java dotnet python ruby???
						--which version?
						-- need to installed in Build server

Where is your code?	git 
				- which version
				- need to be installed in build server

						access?? url?

What is your builder?
				maven gradle ant msbuild shell cmd bash perl python

				- which version
				- need to be installed in build server

How often you want to trigger this job?
					@daily

Whom u want to deliver Feedback
					rajesh@devopsschool.com

==============================================
What is your tech? 
				java

Where is your code?
https://github.com/devopsschool-demo-labs-projects/helloworld-java-maven


What is your builder?
			maven gradle ant msbuild shell cmd bash perl python
			-----------------------
			Goal	 task	   target  target 
			
			compile
			test
			package

How often you want to trigger this job?
					@daily
			
Whom u want to deliver Feedback
					rajesh@devopsschool.com

https://www.devopsschool.com/blog/configure-jenkins-first-job-of-java-code-base-with-maven-build-tool/


https://www.devopsschool.com/blog/how-to-schedule-and-trigger-a-jenkins-job-automatically/

Method 1 – AT CERTAIN TIME AKA Build periodically

Method 2 – AT CERTAIN TIME BUT Build only when there is Code changes AKA Poll SCM

Method 3 – Trigger using command line or script AKA Trigger builds remotely (e.g., from scripts)


curl -X POST --user rajesh:11775f00dbafa2a6341c26064b2baa1ede http://3.110.175.100:8080/job/Rajesh/job/compile/build?delay=0sec

http://3.110.175.100:8080/job/Rajesh/job/compile/

Method 4 – Trigger this job if other job is triggerred AKA Build after other projects are built

Method 5 – Trigger a job when there is PUSH into Github AKA GitHub hook trigger for GITScm polling

Method 7 – Trigger another job after this Job AKA Post Build Action => Build Other project



/bin/python deploy.py





















